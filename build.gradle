plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'java.bike'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

//sourceSets {
//    main {
//        java.srcDirs('./src/main/java')
//        resources.srcDirs('./src/main/resources')
//    }
//    test {
//        java.srcDirs('./src/test/java')
//        resources.srcDirs('./src/test/resources')
//    }
//    integrationTest {
//        java {
//            compileClasspath += main.output + test.output
//            runtimeClasspath += main.output + test.output
//            srcDir file('src/integration/java')
//        }
//        resources.srcDirs('./src/integration/resources')
//    }
//}

//task integrationTest(type: Test) {
//    testClassesDirs = sourceSets.integrationTest.output.classesDirs
//    classpath = sourceSets.integrationTest.runtimeClasspath
//    //If you want to ensure that integration tests are run every time when you invoke
//    //this task, uncomment the following line.
//    //outputs.upToDateWhen { false }
//}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.2.0'
    compileOnly 'org.projectlombok:lombok'
    compileOnly 'org.flywaydb:flyway-core'
    runtimeOnly 'org.postgresql:postgresql'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'com.h2database:h2'
    testCompileOnly 'org.assertj:assertj-core'
    testCompileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.springframework.data:spring-data-commons'

    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}
